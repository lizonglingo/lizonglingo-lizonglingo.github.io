<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>云原生 on Li Duo</title>
    <link>https://lizonglingo.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/</link>
    <description>Recent content in 云原生 on Li Duo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 01 Aug 2022 18:10:59 +0800</lastBuildDate><atom:link href="https://lizonglingo.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cri-dockerd，在kubernetes1.24后继续使用Docker作为容器运行时</title>
      <link>https://lizonglingo.github.io/p/cri-dockerd%E5%9C%A8kubernetes1.24%E5%90%8E%E7%BB%A7%E7%BB%AD%E4%BD%BF%E7%94%A8docker%E4%BD%9C%E4%B8%BA%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6/</link>
      <pubDate>Mon, 01 Aug 2022 18:10:59 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/cri-dockerd%E5%9C%A8kubernetes1.24%E5%90%8E%E7%BB%A7%E7%BB%AD%E4%BD%BF%E7%94%A8docker%E4%BD%9C%E4%B8%BA%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6/</guid>
      <description>为体验Kubernetes以及Cilium组合在一起产生的新特性，我计划将Kubernetes升级到1.24+，并使用最新的稳定版ciliu</description>
    </item>
    
    <item>
      <title>记一次Kubernetes使用Cilium，coredns健康检查失败的排错</title>
      <link>https://lizonglingo.github.io/p/%E8%AE%B0%E4%B8%80%E6%AC%A1kubernetes%E4%BD%BF%E7%94%A8ciliumcoredns%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%8E%92%E9%94%99/</link>
      <pubDate>Fri, 15 Jul 2022 14:35:19 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E8%AE%B0%E4%B8%80%E6%AC%A1kubernetes%E4%BD%BF%E7%94%A8ciliumcoredns%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%8E%92%E9%94%99/</guid>
      <description>该问题最后在Github的Cilium项目中提了issue，被大佬解决了。 issue地址：https://github.com/cilium</description>
    </item>
    
    <item>
      <title>Sinan: ML-Based and QoS-Aware Resource Management for Cloud Microservices</title>
      <link>https://lizonglingo.github.io/p/sinan-ml-based-and-qos-aware-resource-management-for-cloud-microservices/</link>
      <pubDate>Sun, 26 Jun 2022 15:00:34 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/sinan-ml-based-and-qos-aware-resource-management-for-cloud-microservices/</guid>
      <description>来源：ASPLOS&#39;21 ccf-a 作者：Cornell University 正如题目所说，这篇文章主要就是使用机器学习的方法，针对微服务架构的应用进行资源配置，当然是保</description>
    </item>
    
    <item>
      <title>Cocktail: A Multidimensional Optimization for Model Serving in Cloud</title>
      <link>https://lizonglingo.github.io/p/cocktail-a-multidimensional-optimization-for-model-serving-in-cloud/</link>
      <pubDate>Sun, 15 May 2022 21:07:08 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/cocktail-a-multidimensional-optimization-for-model-serving-in-cloud/</guid>
      <description>来源：NSDI&#39;22 推荐阅读！ 摘要 背景 越来越多的ML模型运行在公有云环境下。为这些模型服务的框架能够以最小的延迟提供高度准确的预测，并降低部</description>
    </item>
    
    <item>
      <title>IEEE CLOUD 21 云上资源管理相关合辑</title>
      <link>https://lizonglingo.github.io/p/ieee-cloud-21-%E4%BA%91%E4%B8%8A%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E7%9B%B8%E5%85%B3%E5%90%88%E8%BE%91/</link>
      <pubDate>Thu, 21 Apr 2022 14:33:47 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/ieee-cloud-21-%E4%BA%91%E4%B8%8A%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E7%9B%B8%E5%85%B3%E5%90%88%E8%BE%91/</guid>
      <description>本篇整理自IEEE CLOUD&#39;21会议中的文章，主题为云背景下的资源管理。 RunWild: Resource Management System withGeneralized Modeling for Microservices on Cloud :star:摘要 问题背景 微服务内部通信的复杂性</description>
    </item>
    
    <item>
      <title>MLaaS in the Wild: Workload Analysis and Scheduling in Large-Scale Heterogeneous GPU Clusters</title>
      <link>https://lizonglingo.github.io/p/mlaas-in-the-wild-workload-analysis-and-scheduling-in-large-scale-heterogeneous-gpu-clusters/</link>
      <pubDate>Mon, 21 Mar 2022 21:05:51 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/mlaas-in-the-wild-workload-analysis-and-scheduling-in-large-scale-heterogeneous-gpu-clusters/</guid>
      <description>来源： NSDI&#39;22 作者：Alibaba Group 摘要 在ML as a Service中，数据中心为ML提供算力保证。而多样的ML工作负载面对异构GPU集群时会出现一些</description>
    </item>
    
    <item>
      <title>3MileBeach: A Tracer with Teeth</title>
      <link>https://lizonglingo.github.io/p/3milebeach-a-tracer-with-teeth/</link>
      <pubDate>Mon, 14 Mar 2022 19:12:33 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/3milebeach-a-tracer-with-teeth/</guid>
      <description>来源：ACM SoCC&#39;21 作者：UC Santa Cruz 摘要 提出3MileBeach，一个针对微服务架构的追踪和故障注入平台。 通过介入一个消息序列化库，避免了代码层面的</description>
    </item>
    
    <item>
      <title>Faa$T: A Transparent Auto-Scaling Cache for Serverless Applications</title>
      <link>https://lizonglingo.github.io/p/faat-a-transparent-auto-scaling-cache-for-serverless-applications/</link>
      <pubDate>Mon, 07 Mar 2022 15:48:15 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/faat-a-transparent-auto-scaling-cache-for-serverless-applications/</guid>
      <description>来源：ACM SoCC&#39;21 作者：Microsoft Research&amp;amp;Stanford University&amp;amp;Microsoft Azure 摘要 问题来源：FaaS平台依赖远程存储来维护状态信息，限制了FaaS应用的运行效率。 难点：Faa</description>
    </item>
    
    <item>
      <title>Service-Level Fault Injection Testing</title>
      <link>https://lizonglingo.github.io/p/service-level-fault-injection-testing/</link>
      <pubDate>Thu, 24 Feb 2022 19:25:41 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/service-level-fault-injection-testing/</guid>
      <description>来源：ACM SoCC&#39;21 https://acmsocc.org/2021/accepted-papers.html 摘要——为什么需要服务级别的故障注入测试 由于微服务架构的特点，负责每个模块的工程师只需专注自己的部分而不需要过多关注整个应用</description>
    </item>
    
    <item>
      <title>SHOWAR: Right-Sizing And Efficient Scheduling of Microservices</title>
      <link>https://lizonglingo.github.io/p/showar-right-sizing-and-efficient-scheduling-of-microservices/</link>
      <pubDate>Tue, 22 Feb 2022 13:45:25 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/showar-right-sizing-and-efficient-scheduling-of-microservices/</guid>
      <description>来源：ACM SoCC&#39;21 https://acmsocc.org/2021/accepted-papers.html 概述 解决了什么问题：提出一个微服务资源调度框架，解决微服务的调度问题，具体来说从水平扩缩容——增减服务实例和垂直扩缩容——控</description>
    </item>
    
    <item>
      <title>Kubernetes Service的使用(k8s实践-4)</title>
      <link>https://lizonglingo.github.io/p/kubernetes-service%E7%9A%84%E4%BD%BF%E7%94%A8k8s%E5%AE%9E%E8%B7%B5-4/</link>
      <pubDate>Tue, 25 Jan 2022 20:06:01 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/kubernetes-service%E7%9A%84%E4%BD%BF%E7%94%A8k8s%E5%AE%9E%E8%B7%B5-4/</guid>
      <description>为什么需要使用Kubernetes Service 如前文提到，集群中Pod的IP地址是不稳定的， 会随着Pod的删除、重启、扩缩容等活动发生变动。这就出现了</description>
    </item>
    
    <item>
      <title>Pod和Deployment的使用(k8s实践-3)</title>
      <link>https://lizonglingo.github.io/p/pod%E5%92%8Cdeployment%E7%9A%84%E4%BD%BF%E7%94%A8k8s%E5%AE%9E%E8%B7%B5-3/</link>
      <pubDate>Fri, 21 Jan 2022 18:28:33 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/pod%E5%92%8Cdeployment%E7%9A%84%E4%BD%BF%E7%94%A8k8s%E5%AE%9E%E8%B7%B5-3/</guid>
      <description>使用Pod Pod.yaml apiVersion: v1 kind: Pod metadata: name: hello-pod labels: zone: prod version: v1 spec: containers: - name: hello-ctr image: nigelpoulton/k8sbook:latest ports: - containerPort: 8080 创建Pod root@lzl:/home/lzl# kubectl apply -f ./WorkSpace/k8s/pod/Pod.yml pod/hello-pod created root@lzl:/home/lzl# kubectl get Pods NAME READY STATUS RESTARTS AGE hello-pod 0/1 ContainerCreating 0 12s # 要等一会，因为有拉取镜像的时</description>
    </item>
    
    <item>
      <title>搭建1个Master节点和2个Work节点的集群(k8s实践-2)</title>
      <link>https://lizonglingo.github.io/p/%E6%90%AD%E5%BB%BA1%E4%B8%AAmaster%E8%8A%82%E7%82%B9%E5%92%8C2%E4%B8%AAwork%E8%8A%82%E7%82%B9%E7%9A%84%E9%9B%86%E7%BE%A4k8s%E5%AE%9E%E8%B7%B5-2/</link>
      <pubDate>Tue, 18 Jan 2022 17:39:01 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E6%90%AD%E5%BB%BA1%E4%B8%AAmaster%E8%8A%82%E7%82%B9%E5%92%8C2%E4%B8%AAwork%E8%8A%82%E7%82%B9%E7%9A%84%E9%9B%86%E7%BE%A4k8s%E5%AE%9E%E8%B7%B5-2/</guid>
      <description>本节的目标是：搭建含有一个Master Node和两个Work Node的k8s集群，创建一个admin用户并通过token访问kubernet</description>
    </item>
    
    <item>
      <title>笔记 &gt; SHOWAR: Right-Sizing And Efficient Scheduling of Microservices</title>
      <link>https://lizonglingo.github.io/p/%E7%AC%94%E8%AE%B0-showar-right-sizing-and-efficient-scheduling-of-microservices/</link>
      <pubDate>Mon, 20 Dec 2021 14:51:34 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E7%AC%94%E8%AE%B0-showar-right-sizing-and-efficient-scheduling-of-microservices/</guid>
      <description>摘要 提出微服务的面临的一个挑战是为每个微服务找到最佳的分配资源和服务实例的数量。达到保证性能的同时最大限度的提高资源利用率这样一个目标。本文</description>
    </item>
    
    <item>
      <title>笔记 &gt; Service-Level Fault Injection Testing</title>
      <link>https://lizonglingo.github.io/p/%E7%AC%94%E8%AE%B0-service-level-fault-injection-testing/</link>
      <pubDate>Sat, 18 Dec 2021 15:35:42 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E7%AC%94%E8%AE%B0-service-level-fault-injection-testing/</guid>
      <description>来源：SoCC&#39;21 Meiklejohn C S, Estrada A, Song Y, et al. Service-Level Fault Injection Testing[C]//Proceedings of the ACM Symposium on Cloud Computing. 2021: 388-402. 摘要 越来越多的企业使用微服务架构发布他们的大规模的移动或是Web应用。 问题在</description>
    </item>
    
    <item>
      <title>微服务网关--kong</title>
      <link>https://lizonglingo.github.io/p/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3--kong/</link>
      <pubDate>Thu, 02 Dec 2021 19:20:18 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3--kong/</guid>
      <description>Kong网关是一个轻量级、高性能、可拓展的云原生API网关。下面我们以docker的形式搭建kong环境。 1. 拉取kong-gateway镜像</description>
    </item>
    
    <item>
      <title>启动k8s的主节点(k8s实践-1)</title>
      <link>https://lizonglingo.github.io/p/%E5%90%AF%E5%8A%A8k8s%E7%9A%84%E4%B8%BB%E8%8A%82%E7%82%B9k8s%E5%AE%9E%E8%B7%B5-1/</link>
      <pubDate>Sun, 28 Nov 2021 20:37:15 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E5%90%AF%E5%8A%A8k8s%E7%9A%84%E4%B8%BB%E8%8A%82%E7%82%B9k8s%E5%AE%9E%E8%B7%B5-1/</guid>
      <description>概念 关于k8s的一些概念在官网讲的很详细，这里着重说几个。 主节点 主节点是组成集群控制平面的系统服务集合。生产环境中一般建议有3或5个主节点保</description>
    </item>
    
    <item>
      <title>从Docker覆盖网络引出大二层网络</title>
      <link>https://lizonglingo.github.io/p/%E4%BB%8Edocker%E8%A6%86%E7%9B%96%E7%BD%91%E7%BB%9C%E5%BC%95%E5%87%BA%E5%A4%A7%E4%BA%8C%E5%B1%82%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Sat, 20 Nov 2021 11:24:40 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E4%BB%8Edocker%E8%A6%86%E7%9B%96%E7%BD%91%E7%BB%9C%E5%BC%95%E5%87%BA%E5%A4%A7%E4%BA%8C%E5%B1%82%E7%BD%91%E7%BB%9C/</guid>
      <description>学习Docker覆盖网络的时候，自然免不了与数据中心大二层网络技术的关系，然后补了一下相关的知识。 从Docker覆盖网络谈起 对于不同网络中容</description>
    </item>
    
    <item>
      <title>使用Docker Swarm管理服务集群</title>
      <link>https://lizonglingo.github.io/p/%E4%BD%BF%E7%94%A8docker-swarm%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Tue, 16 Nov 2021 11:57:32 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E4%BD%BF%E7%94%A8docker-swarm%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1%E9%9B%86%E7%BE%A4/</guid>
      <description>这个实验书上的示例是6台机器（虚拟机），我在本机部署时由于内存原因只用了4台虚拟机，但效果还是基本达到了，只有在模拟某台管理节点宕机时，出现</description>
    </item>
    
    <item>
      <title>使用docker-compose部署应用</title>
      <link>https://lizonglingo.github.io/p/%E4%BD%BF%E7%94%A8docker-compose%E9%83%A8%E7%BD%B2%E5%BA%94%E7%94%A8/</link>
      <pubDate>Thu, 11 Nov 2021 14:47:36 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E4%BD%BF%E7%94%A8docker-compose%E9%83%A8%E7%BD%B2%E5%BA%94%E7%94%A8/</guid>
      <description>Docker Compose可以在Docker节点上，以单引擎模式进行多容器应用的部署和管理。使用时，首先定义多容器的应用的YAML文件，然后就可以交给</description>
    </item>
    
    <item>
      <title>云原生在实践中的技术组成</title>
      <link>https://lizonglingo.github.io/p/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%9C%A8%E5%AE%9E%E8%B7%B5%E4%B8%AD%E7%9A%84%E6%8A%80%E6%9C%AF%E7%BB%84%E6%88%90/</link>
      <pubDate>Mon, 08 Nov 2021 23:41:03 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E4%BA%91%E5%8E%9F%E7%94%9F%E5%9C%A8%E5%AE%9E%E8%B7%B5%E4%B8%AD%E7%9A%84%E6%8A%80%E6%9C%AF%E7%BB%84%E6%88%90/</guid>
      <description>1. 微服务 微服务的引入解决了单体服务的复杂性，将明确定义的功能分成粒度更小的服务，是每个微服务独立迭代、独立部署，独立拓展、独立重启。达到服务</description>
    </item>
    
    <item>
      <title>《云计算网络与安全》简记</title>
      <link>https://lizonglingo.github.io/p/%E4%BA%91%E8%AE%A1%E7%AE%97%E7%BD%91%E7%BB%9C%E4%B8%8E%E5%AE%89%E5%85%A8%E7%AE%80%E8%AE%B0/</link>
      <pubDate>Mon, 01 Nov 2021 17:37:21 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E4%BA%91%E8%AE%A1%E7%AE%97%E7%BD%91%E7%BB%9C%E4%B8%8E%E5%AE%89%E5%85%A8%E7%AE%80%E8%AE%B0/</guid>
      <description>今天在图书馆借了两本云计算安全方面的教材类书籍，系统的了解一下云计算安全技术涉及到的相关内容和一些基本概念。通过本文，你可以了解云计算网络安</description>
    </item>
    
  </channel>
</rss>
