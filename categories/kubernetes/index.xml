<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Li Duo</title>
    <link>https://lizonglingo.github.io/categories/kubernetes/</link>
    <description>Recent content in Kubernetes on Li Duo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 01 Aug 2022 18:10:59 +0800</lastBuildDate><atom:link href="https://lizonglingo.github.io/categories/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cri-dockerd，在kubernetes1.24后继续使用Docker作为容器运行时</title>
      <link>https://lizonglingo.github.io/p/cri-dockerd%E5%9C%A8kubernetes1.24%E5%90%8E%E7%BB%A7%E7%BB%AD%E4%BD%BF%E7%94%A8docker%E4%BD%9C%E4%B8%BA%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6/</link>
      <pubDate>Mon, 01 Aug 2022 18:10:59 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/cri-dockerd%E5%9C%A8kubernetes1.24%E5%90%8E%E7%BB%A7%E7%BB%AD%E4%BD%BF%E7%94%A8docker%E4%BD%9C%E4%B8%BA%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E6%97%B6/</guid>
      <description>为体验Kubernetes以及Cilium组合在一起产生的新特性，我计划将Kubernetes升级到1.24+，并使用最新的稳定版ciliu</description>
    </item>
    
    <item>
      <title>记一次Kubernetes使用Cilium，coredns健康检查失败的排错</title>
      <link>https://lizonglingo.github.io/p/%E8%AE%B0%E4%B8%80%E6%AC%A1kubernetes%E4%BD%BF%E7%94%A8ciliumcoredns%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%8E%92%E9%94%99/</link>
      <pubDate>Fri, 15 Jul 2022 14:35:19 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E8%AE%B0%E4%B8%80%E6%AC%A1kubernetes%E4%BD%BF%E7%94%A8ciliumcoredns%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%8E%92%E9%94%99/</guid>
      <description>该问题最后在Github的Cilium项目中提了issue，被大佬解决了。 issue地址：https://github.com/cilium</description>
    </item>
    
    <item>
      <title>RunWild: Resource Management System with Generalized Modeling for Microservices on Cloud</title>
      <link>https://lizonglingo.github.io/p/runwild-resource-management-system-with-generalized-modeling-for-microservices-on-cloud/</link>
      <pubDate>Sun, 24 Apr 2022 15:17:07 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/runwild-resource-management-system-with-generalized-modeling-for-microservices-on-cloud/</guid>
      <description>来源：IEEE CLOUD&#39;21 作者：IBM :star:摘要 问题背景 微服务内部通信的复杂性，必须考虑资源利用、调度策略和请求均衡之间的平衡，以防止跨微服务级</description>
    </item>
    
    <item>
      <title>IEEE CLOUD 21 云上资源管理相关合辑</title>
      <link>https://lizonglingo.github.io/p/ieee-cloud-21-%E4%BA%91%E4%B8%8A%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E7%9B%B8%E5%85%B3%E5%90%88%E8%BE%91/</link>
      <pubDate>Thu, 21 Apr 2022 14:33:47 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/ieee-cloud-21-%E4%BA%91%E4%B8%8A%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E7%9B%B8%E5%85%B3%E5%90%88%E8%BE%91/</guid>
      <description>本篇整理自IEEE CLOUD&#39;21会议中的文章，主题为云背景下的资源管理。 RunWild: Resource Management System withGeneralized Modeling for Microservices on Cloud :star:摘要 问题背景 微服务内部通信的复杂性</description>
    </item>
    
    <item>
      <title>SHOWAR: Right-Sizing And Efficient Scheduling of Microservices</title>
      <link>https://lizonglingo.github.io/p/showar-right-sizing-and-efficient-scheduling-of-microservices/</link>
      <pubDate>Tue, 22 Feb 2022 13:45:25 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/showar-right-sizing-and-efficient-scheduling-of-microservices/</guid>
      <description>来源：ACM SoCC&#39;21 https://acmsocc.org/2021/accepted-papers.html 概述 解决了什么问题：提出一个微服务资源调度框架，解决微服务的调度问题，具体来说从水平扩缩容——增减服务实例和垂直扩缩容——控</description>
    </item>
    
    <item>
      <title>Kubernetes Service的使用(k8s实践-4)</title>
      <link>https://lizonglingo.github.io/p/kubernetes-service%E7%9A%84%E4%BD%BF%E7%94%A8k8s%E5%AE%9E%E8%B7%B5-4/</link>
      <pubDate>Tue, 25 Jan 2022 20:06:01 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/kubernetes-service%E7%9A%84%E4%BD%BF%E7%94%A8k8s%E5%AE%9E%E8%B7%B5-4/</guid>
      <description>为什么需要使用Kubernetes Service 如前文提到，集群中Pod的IP地址是不稳定的， 会随着Pod的删除、重启、扩缩容等活动发生变动。这就出现了</description>
    </item>
    
    <item>
      <title>Pod和Deployment的使用(k8s实践-3)</title>
      <link>https://lizonglingo.github.io/p/pod%E5%92%8Cdeployment%E7%9A%84%E4%BD%BF%E7%94%A8k8s%E5%AE%9E%E8%B7%B5-3/</link>
      <pubDate>Fri, 21 Jan 2022 18:28:33 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/pod%E5%92%8Cdeployment%E7%9A%84%E4%BD%BF%E7%94%A8k8s%E5%AE%9E%E8%B7%B5-3/</guid>
      <description>使用Pod Pod.yaml apiVersion: v1 kind: Pod metadata: name: hello-pod labels: zone: prod version: v1 spec: containers: - name: hello-ctr image: nigelpoulton/k8sbook:latest ports: - containerPort: 8080 创建Pod root@lzl:/home/lzl# kubectl apply -f ./WorkSpace/k8s/pod/Pod.yml pod/hello-pod created root@lzl:/home/lzl# kubectl get Pods NAME READY STATUS RESTARTS AGE hello-pod 0/1 ContainerCreating 0 12s # 要等一会，因为有拉取镜像的时</description>
    </item>
    
    <item>
      <title>搭建1个Master节点和2个Work节点的集群(k8s实践-2)</title>
      <link>https://lizonglingo.github.io/p/%E6%90%AD%E5%BB%BA1%E4%B8%AAmaster%E8%8A%82%E7%82%B9%E5%92%8C2%E4%B8%AAwork%E8%8A%82%E7%82%B9%E7%9A%84%E9%9B%86%E7%BE%A4k8s%E5%AE%9E%E8%B7%B5-2/</link>
      <pubDate>Tue, 18 Jan 2022 17:39:01 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E6%90%AD%E5%BB%BA1%E4%B8%AAmaster%E8%8A%82%E7%82%B9%E5%92%8C2%E4%B8%AAwork%E8%8A%82%E7%82%B9%E7%9A%84%E9%9B%86%E7%BE%A4k8s%E5%AE%9E%E8%B7%B5-2/</guid>
      <description>本节的目标是：搭建含有一个Master Node和两个Work Node的k8s集群，创建一个admin用户并通过token访问kubernet</description>
    </item>
    
    <item>
      <title>笔记 &gt; SHOWAR: Right-Sizing And Efficient Scheduling of Microservices</title>
      <link>https://lizonglingo.github.io/p/%E7%AC%94%E8%AE%B0-showar-right-sizing-and-efficient-scheduling-of-microservices/</link>
      <pubDate>Mon, 20 Dec 2021 14:51:34 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E7%AC%94%E8%AE%B0-showar-right-sizing-and-efficient-scheduling-of-microservices/</guid>
      <description>摘要 提出微服务的面临的一个挑战是为每个微服务找到最佳的分配资源和服务实例的数量。达到保证性能的同时最大限度的提高资源利用率这样一个目标。本文</description>
    </item>
    
    <item>
      <title>启动k8s的主节点(k8s实践-1)</title>
      <link>https://lizonglingo.github.io/p/%E5%90%AF%E5%8A%A8k8s%E7%9A%84%E4%B8%BB%E8%8A%82%E7%82%B9k8s%E5%AE%9E%E8%B7%B5-1/</link>
      <pubDate>Sun, 28 Nov 2021 20:37:15 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E5%90%AF%E5%8A%A8k8s%E7%9A%84%E4%B8%BB%E8%8A%82%E7%82%B9k8s%E5%AE%9E%E8%B7%B5-1/</guid>
      <description>概念 关于k8s的一些概念在官网讲的很详细，这里着重说几个。 主节点 主节点是组成集群控制平面的系统服务集合。生产环境中一般建议有3或5个主节点保</description>
    </item>
    
  </channel>
</rss>
