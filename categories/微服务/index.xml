<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>微服务 on Li Duo</title>
    <link>https://lizonglingo.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/</link>
    <description>Recent content in 微服务 on Li Duo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 26 Jun 2022 15:00:34 +0800</lastBuildDate><atom:link href="https://lizonglingo.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sinan: ML-Based and QoS-Aware Resource Management for Cloud Microservices</title>
      <link>https://lizonglingo.github.io/p/sinan-ml-based-and-qos-aware-resource-management-for-cloud-microservices/</link>
      <pubDate>Sun, 26 Jun 2022 15:00:34 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/sinan-ml-based-and-qos-aware-resource-management-for-cloud-microservices/</guid>
      <description>来源：ASPLOS&#39;21 ccf-a 作者：Cornell University 正如题目所说，这篇文章主要就是使用机器学习的方法，针对微服务架构的应用进行资源配置，当然是保</description>
    </item>
    
    <item>
      <title>Characterizing microservice dependency and performance: Alibaba trace analysis</title>
      <link>https://lizonglingo.github.io/p/characterizing-microservice-dependency-and-performance-alibaba-trace-analysis/</link>
      <pubDate>Tue, 29 Mar 2022 13:40:56 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/characterizing-microservice-dependency-and-performance-alibaba-trace-analysis/</guid>
      <description>来源： SoCC&#39;21 作者： Alibaba Group http://cloud.siat.ac.cn/pdca/socc2021-AlibabaTraceAnalysis.pdf 摘要 背景 理解微服务的特征，对利用微服务架构的特性很重要。然而，目前还没有对微服务及其相关系统在生产环境下的全面研究。 工作</description>
    </item>
    
    <item>
      <title>3MileBeach: A Tracer with Teeth</title>
      <link>https://lizonglingo.github.io/p/3milebeach-a-tracer-with-teeth/</link>
      <pubDate>Mon, 14 Mar 2022 19:12:33 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/3milebeach-a-tracer-with-teeth/</guid>
      <description>来源：ACM SoCC&#39;21 作者：UC Santa Cruz 摘要 提出3MileBeach，一个针对微服务架构的追踪和故障注入平台。 通过介入一个消息序列化库，避免了代码层面的</description>
    </item>
    
    <item>
      <title>Service-Level Fault Injection Testing</title>
      <link>https://lizonglingo.github.io/p/service-level-fault-injection-testing/</link>
      <pubDate>Thu, 24 Feb 2022 19:25:41 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/service-level-fault-injection-testing/</guid>
      <description>来源：ACM SoCC&#39;21 https://acmsocc.org/2021/accepted-papers.html 摘要——为什么需要服务级别的故障注入测试 由于微服务架构的特点，负责每个模块的工程师只需专注自己的部分而不需要过多关注整个应用</description>
    </item>
    
    <item>
      <title>SHOWAR: Right-Sizing And Efficient Scheduling of Microservices</title>
      <link>https://lizonglingo.github.io/p/showar-right-sizing-and-efficient-scheduling-of-microservices/</link>
      <pubDate>Tue, 22 Feb 2022 13:45:25 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/showar-right-sizing-and-efficient-scheduling-of-microservices/</guid>
      <description>来源：ACM SoCC&#39;21 https://acmsocc.org/2021/accepted-papers.html 概述 解决了什么问题：提出一个微服务资源调度框架，解决微服务的调度问题，具体来说从水平扩缩容——增减服务实例和垂直扩缩容——控</description>
    </item>
    
    <item>
      <title>笔记 &gt; SHOWAR: Right-Sizing And Efficient Scheduling of Microservices</title>
      <link>https://lizonglingo.github.io/p/%E7%AC%94%E8%AE%B0-showar-right-sizing-and-efficient-scheduling-of-microservices/</link>
      <pubDate>Mon, 20 Dec 2021 14:51:34 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E7%AC%94%E8%AE%B0-showar-right-sizing-and-efficient-scheduling-of-microservices/</guid>
      <description>摘要 提出微服务的面临的一个挑战是为每个微服务找到最佳的分配资源和服务实例的数量。达到保证性能的同时最大限度的提高资源利用率这样一个目标。本文</description>
    </item>
    
    <item>
      <title>笔记 &gt; Service-Level Fault Injection Testing</title>
      <link>https://lizonglingo.github.io/p/%E7%AC%94%E8%AE%B0-service-level-fault-injection-testing/</link>
      <pubDate>Sat, 18 Dec 2021 15:35:42 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E7%AC%94%E8%AE%B0-service-level-fault-injection-testing/</guid>
      <description>来源：SoCC&#39;21 Meiklejohn C S, Estrada A, Song Y, et al. Service-Level Fault Injection Testing[C]//Proceedings of the ACM Symposium on Cloud Computing. 2021: 388-402. 摘要 越来越多的企业使用微服务架构发布他们的大规模的移动或是Web应用。 问题在</description>
    </item>
    
    <item>
      <title>微服务网关--kong</title>
      <link>https://lizonglingo.github.io/p/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3--kong/</link>
      <pubDate>Thu, 02 Dec 2021 19:20:18 +0800</pubDate>
      
      <guid>https://lizonglingo.github.io/p/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3--kong/</guid>
      <description>Kong网关是一个轻量级、高性能、可拓展的云原生API网关。下面我们以docker的形式搭建kong环境。 1. 拉取kong-gateway镜像</description>
    </item>
    
  </channel>
</rss>
